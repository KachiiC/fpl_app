{"version":3,"sources":["Data/PageData.js","Components/SiteNavbar/Dropdown.js","Components/SiteNavbar/index.js","Tables/TableComponents/TableHeaders.js","Tables/TableComponents/TableRows.js","Tables/TableComponents/DisplayTable.js","Tables/TableComponents/TablePlayersCell.js","Tables/TableComponents/TablePlayersRow.js","Tables/TableComponents/TableCellType.js","Tables/TableTools/SiteReducer.js","Tables/PointsTable.js","Components/SiteFetcher/index.js","Components/SiteRender/index.js","Components/AntdTabs/index.js","Tables/TableTools/SiteLabelRender.js","Components/MaterialUiTable/TableContents/TableHeadings.js","Components/MaterialUiTable/TableContents/TableCollapsableRow.js","Components/MaterialUiTable/TableContents/TableSingleRow.js","Components/MaterialUiTable/TableContents/TableContents.js","Components/MaterialUiTable/index.js","Components/AntdCard/index.js","PlayerDetail/DetailTables/DetailTables.js","PlayerDetail/DetailTables/SummaryTable.js","PlayerDetail/DetailTables/ChipTables.js","PlayerDetail/index.js","Data/PlayerListData.js","Data/SummaryColumns.js","Tables/SummaryTable.js","App.js","reportWebVitals.js","index.js"],"names":["PageData","title","Dropdown","props","displayedMenus","dropdown_menus","map","menu","index","DropdownItem","className","to","UncontrolledDropdown","DropdownToggle","nav","caret","head_menu","DropdownMenu","inNavbar","SiteNavbar","displayNavs","page","pageLink","split","join","NavItem","playersList","data","player","player_name","useState","isOpen","setIsOpen","Navbar","color","dark","expand","NavbarBrand","href","NavbarToggler","onClick","Collapse","navbar","Nav","TableHeaders","GameWeeksLogic","game_weeks","match","gameweek","type","PointsTotal","TableRows","AveragesLogic","averages","average","typeLogic","toFixed","rows","total_averages","AverageTotals","DisplayTable","Table","responsive","total","matches","TablePlayersCell","valueLogic","value","rating","table_style","TablePlayersRow","rank","total_rating","total_points","renderTotalLogic","TableCellType","good","bad","SiteReducer","array","reduce","a","b","PointsTable","TotalsAverage","SortLogic","FplData","AllOfThePointsScored","AllOfTheAverages","y","length","x","MatchesData","push","game_week_points","points_total","team_value","Math","floor","bench_points","game_week_transfers_cost","i","slice","sort","reducer","item","week","valueRender","WeeksReducer","PlayerGameWeeks","TotalsLogic","TotalsRatingLogic","PlayersWeek","matchweek","ValueLogic","RatingTypeLogic","GameweekAverage","indexOf","RatingLogic","TotalRatingLogic","SiteFetcher","url","properties","response","setResponse","isFetching","setIsFetching","isDisplayable","setIsDisplayable","useEffect","fetch","then","json","responseJson","catch","error","console","log","SiteRender","IsFetching","component","CircularProgress","TabPane","Tabs","AntdTabs","displayTabs","tab","content","size","centered","SiteLabelRender","toUpperCase","TableHeadings","renderHeadings","Object","keys","filter","heading","headingLogic","TableCell","align","TableHead","TableRow","CollapseSectionDropdown","style","paddingBottom","paddingTop","colSpan","in","open","timeout","unmountOnExit","TableSingleRow","rowContent","row","setOpen","openLogic","displayedTableCells","attribute","arrowLogic","faChevronCircleDown","faChevronCircleRight","icon","dropDownLogic","TableCollapsableRow","TableContentRow","renderDataList","TableBody","MaterialUITable","TableContainer","Paper","aria-label","TableContents","AntdCard","Meta","Card","spanLogic","span","widthLogic","width","description","DetailTables","tableData","displayedContent","card","MaterialUiTable","SumamryTable","summaryHeadings","player_id","total_transfers","transfers_total","displayDecription","label","labelName","labelDescription","points_on_transfers","current_gameweek","last_gameweek_points","ChipTables","displayChips","chip","descriptionLogic","chip_matchday","chip_date","chip_name","filteredCards","summary_card","PlayerDetail","pageContent","chips","team_name","PlayerListData","SummaryColumns","dataIndex","sorter","compare","fixed","SummaryTable","myData","chips_used","columns","column","paginationLogic","dataSource","pagination","App","SiteFetch","PlayerDataExample","responseData","displayPages","path","displayPlayerPages","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.973e9a62.chunk.js","sourcesContent":["const PageData = [\n    {\n        title: \"Weekly Points\"\n    },\n    {\n        title: \"Weekly Totals\",\n    },\n    {\n        title: \"Team value\",\n    },\n    {\n        title: \"Bench points\",\n    },\n    {\n        title: \"Points on transfers\",\n    }\n]\n\nexport default PageData","import React from 'react'\nimport {Link} from 'react-router-dom'\nimport { UncontrolledDropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap'\n\n\nconst Dropdown = (props) => {\n\n    const Menus = props.dropdown_menus\n\n    const displayedMenus = Menus.map((menu, index) => (\n        <DropdownItem className=\"nav-dropdown-menu-link\" key={index}>\n            <Link to={`/fpl_app/player/${menu}`} className=\"nav-dropdown-menu-link\">\n                {menu}\n            </Link>\n        </DropdownItem>\n    ))\n\n    return (\n        <UncontrolledDropdown>\n            <DropdownToggle nav caret className=\"nav-links\">\n                {props.head_menu}\n            </DropdownToggle>\n            <DropdownMenu inNavbar nav className=\"nav-dropdown-menu\">\n                {displayedMenus}\n            </DropdownMenu>\n        </UncontrolledDropdown>\n    )\n}\n\nexport default Dropdown","import React, { useState } from 'react';\nimport { \n    Collapse, \n    Navbar, \n    NavbarToggler, \n    NavbarBrand, \n    Nav, \n    NavItem\n} from 'reactstrap'\nimport PageData from 'Data/PageData';\nimport Dropdown from './Dropdown';\nimport './navbar.css'\nimport {Link} from 'react-router-dom'\n\nconst SiteNavbar = (props) => {\n\n    const displayNavs = PageData.map((page, index) => {\n\n        const pageLink = page.title.split(\" \").join(\"-\")\n\n        return (\n            <NavItem key={index}>\n                <Link to={`/fpl_app/${pageLink}`} className=\"nav-links\">\n                    {page.title}\n                </Link>\n            </NavItem>\n        )\n    })\n    \n    const playersList = props.data.map((player) => player.player_name)\n    \n    const [isOpen, setIsOpen] = useState(false);\n\n    const toggle = () => setIsOpen(!isOpen);\n    \n    return (\n        <Navbar color=\"dark\" dark expand=\"md\" className=\"nav-background\">\n            <NavbarBrand href=\"/fpl_app\">\n                FPL Stats\n            </NavbarBrand>\n            <NavbarToggler onClick={toggle} />\n            <Collapse isOpen={isOpen} navbar>\n                <Nav className=\"mr-auto\" navbar>\n                    {displayNavs}\n                </Nav>\n                <Dropdown head_menu=\"players\" dropdown_menus={playersList}/>\n            </Collapse>\n        </Navbar>\n    );\n}\n\nexport default SiteNavbar;","import React from 'react'\n\nconst TableHeaders = (props) =>  {\n\n    const GameWeeksLogic = props.game_weeks.map((match) => \n        <th>GW{match.gameweek}</th>\n    )\n\n    // if it isn't points_total return a total header\n    const PointsTotal = () => {\n        if (props.type !== \"points_total\" && props.type !== \"team_value\") {\n            return <th>Total</th>\n        }\n    }\n\n    return (\n        <tr>\n            <th>Rank</th>\n            <th>Players</th>\n            {GameWeeksLogic}\n            {PointsTotal()}\n        </tr>\n    )\n}\n\nexport default TableHeaders","import React from 'react'\n\nconst TableRows = (props) => {\n\n    // if it isn't points_total return a total some \n    const AverageTotals = () => {\n        if (props.type !== \"points_total\" && props.type !== \"team_value\") {\n            return <td>{props.total_averages}</td>\n        }\n    }\n\n    const AveragesLogic = props.averages.map((average, index) => {\n\n        const typeLogic = props.type === \"team_value\" ? \n            `${(average /10).toFixed(1)}M`\n            :\n            average.toFixed(1)\n        \n        return (\n            <td key={index}>\n                {typeLogic}\n            </td>\n        )\n    })\n\n    return (\n        <>\n            {props.rows}\n            <tr>\n                <td/>\n                <td>Average</td>\n                {AveragesLogic}\n                {AverageTotals()}\n            </tr>\n\n        </>\n    )\n}\n\nexport default TableRows","import React from 'react'\n// COMPONENTS\nimport Table from 'react-bootstrap/Table'\nimport TableHeaders from './TableHeaders'\nimport TableRows from './TableRows'\n\nconst DisplayTable = (props) => (\n    <>\n        <h2>{props.title}</h2>\n        <Table responsive>\n            <tbody>\n                <TableHeaders \n                    total={props.total} \n                    game_weeks={props.data[0].matches}\n                    type={props.type}\n                />\n                <TableRows \n                    type={props.type}\n                    rows={props.rows}\n                    averages={props.averages}\n                    total_averages={props.total_averages}\n                />\n            </tbody>\n        </Table>\n    </>\n)\n\nexport default DisplayTable","import React from 'react'\n\nconst TablePlayersCell = (props) => {\n    \n    const valueLogic = props.type === \"team_value\" ? `${(props.value /10).toFixed(1)}M` : props.value\n\n    return (\n\n        <td className={`${props.rating}-week ${props.table_style}`}>\n            {valueLogic}\n        </td>\n    )\n}\nexport default TablePlayersCell","import React from 'react'\n// COMPONENTS\nimport TablePlayersCell from './TablePlayersCell'\n\nconst TablePlayersRow = (props) => {\n\n    const renderTotalLogic = () => {\n        if (props.type !== \"points_total\" && props.type !== \"team_value\") {\n            return (\n                <TablePlayersCell\n                    rating={props.total_rating}\n                    value={props.total_points}\n                />\n            )\n        }\n    }\n    \n    return (\n        <tr>\n            <td>{props.rank}</td>\n            <td>{props.player_name}</td>\n            {props.game_weeks}\n            {renderTotalLogic()}\n        </tr>\n    )\n}\n\nexport default TablePlayersRow\n","const TableCellType = (good, bad) => good >= bad ? \"good\" : \"bad\"\n\nexport default TableCellType","const SiteReducer = (array) => array.reduce((a,b) => a + b)\n\nexport default SiteReducer","import React from 'react'\n// Data\n// import PlayeDataExample from 'Data/PlayerListData'\n// import SiteFetcher from 'Components/SiteFetcher'\n// import SiteRender from 'Components/SiteRender'\n// Components\nimport DisplayTable from './TableComponents/DisplayTable'\nimport TablePlayersRow from './TableComponents/TablePlayersRow'\nimport TablePlayersCell from './TableComponents/TablePlayersCell'\nimport TableCellType from './TableComponents/TableCellType'\nimport SiteReducer from './TableTools/SiteReducer'\n\n\nconst PointsTable = (props) => {\n\n    //FPL Data\n    const FplData = props.data\n\n    //// SET UPS ////\n    // Array of all points score begins as empty\n    const AllOfThePointsScored = []\n    const AllOfTheAverages = []\n    \n    // For loop logic that pushes points scored of each player\n    // Matches.length is detirmined by number of game weeks \n    // FplData.length is detirmined by the number of Players\n    for (let y=0; y < FplData[0].matches.length; y++) {\n        for (let x=0; x < FplData.length; x++) {\n            const MatchesData = FplData[x].matches[y]\n            // Points are detirmed by which props.type is passed through table\n            // CHANGE THIS FOR OTHER TABLES \n            switch (props.type) {\n                case \"weekly_points\":\n                    // Pushes points scored by each player each game week\n                    AllOfThePointsScored.push(MatchesData.game_week_points);\n                    break;\n                case \"points_total\":  \n                    // Pushes points total of each player, each week\n                    AllOfThePointsScored.push(MatchesData.points_total);\n                    break;\n                case \"team_value\":\n                    // Pushes team value of each player each game week\n                    AllOfThePointsScored.push(MatchesData.team_value);\n                    break;\n                case \"bench_points\":\n                    // Pushes bench points of each player each game week\n                    AllOfThePointsScored.push(Math.floor(MatchesData.bench_points))\n                    break;\n                case \"transfer_points\":\n                    // Pushes bench points of each player each game week\n                    AllOfThePointsScored.push(Math.floor(MatchesData.game_week_transfers_cost))\n                    break;\n                default:\n                    // // Return game week points as default\n                    AllOfThePointsScored.push(MatchesData.points_total);\n            }\n        }\n    }\n    \n    // Average points detirmined by number of players and gameweek\n    for (let i=0; i < AllOfThePointsScored.length; i += FplData.length) {\n        // renders the average of each gameweek and pushes to the array\n        AllOfTheAverages.push(\n            SiteReducer(\n                AllOfThePointsScored.slice(i, i + FplData.length)\n            )\n            / FplData.length\n        )\n    }\n\n    // Total Average  and Sort will be based on value types\n    var TotalsAverage, SortLogic\n\n    // Total of all average of all players\n    switch (props.type) {\n        case \"weekly_points\":\n            // Returns the Average Points Total\n            TotalsAverage = FplData.map(player => \n                player.points_total\n            ).reduce((a, b) => a + b) / FplData.length\n            // Already sorted according to points so can leave as default\n            SortLogic = FplData\n            break;\n        case \"bench_points\":\n            // Returns the Average Bench Points Total\n            TotalsAverage = SiteReducer(\n                    FplData.map(player => SiteReducer(\n                            player.matches.map(match => match.bench_points)\n                        )\n                    )\n                )\n                / FplData.length\n            // sort by who has the most bench points in total\n            SortLogic = FplData.sort((a, b) => {\n\n                const reducer = item => SiteReducer(\n                    item.matches.map(week => week.bench_points)\n                )\n                \n                return reducer(a) - reducer(b)\n            })\n            break\n        case \"team_value\":\n            // sort by highest team value \n            SortLogic = FplData.sort((a, b) => {\n                const valueRender = item => item.matches[b.matches.length - 1].team_value \n                \n                return valueRender(b) - valueRender(a)\n            })\n            break\n        case \"transfer_points\":\n            SortLogic = FplData.sort((a, b) => {\n\n                const WeeksReducer = item => SiteReducer(\n                    item.matches.map((week) => week.game_week_transfers_cost)\n                )\n\n                return WeeksReducer(a) - WeeksReducer(b)\n            })\n\n            TotalsAverage = SiteReducer(\n                    FplData.map(player => \n                        SiteReducer(\n                            player.matches.map(match => match.game_week_transfers_cost)\n                        )\n                    )\n                )\n                / FplData.length\n\n            break;\n        default:\n            // default \n            SortLogic = FplData\n    }\n\n    // Map each player and returns their points per gameweek\n    const PlayerGameWeeks = SortLogic.map((player, index) => {\n\n        // Returns each game week of the player as a Table cell\n        const PlayersWeek = player.matches.map((matchweek, index) => {\n\n            const GameweekAverage = AllOfTheAverages[player.matches.indexOf(matchweek)]\n\n            // Value and Bench detirmines the following varriables\n            // Intitally set as empty\n            var ValueLogic, RatingTypeLogic\n            \n            // Detirmines type of cell\n            switch (props.type) {\n                case \"points_total\":\n                    // returns points total end of matchweek\n                    ValueLogic = matchweek.points_total\n                    break;\n                case \"weekly_points\":\n                    // returns points scored that of matchweek\n                    ValueLogic = matchweek.game_week_points\n                    break\n                case \"team_value\":\n                    // returns team value by the end of matchweek\n                    ValueLogic = matchweek.team_value\n                    break\n                case \"bench_points\":\n                    // returns points scored by players on your bench\n                    ValueLogic = matchweek.bench_points\n                    // If value is higher that average will return bad\n                    // the less points score by bench players the better\n                    RatingTypeLogic = ValueLogic > GameweekAverage ? \"bad\" : \"good\"\n                    break\n                case \"transfer_points\":\n                    ValueLogic = matchweek.game_week_transfers_cost\n                    RatingTypeLogic = ValueLogic > 0 ?\n                        matchweek.game_week_transfers_cost === 4 ? \n                            \"hit\" \n                            : \n                            \"bad\"\n                        :\n                        \"neutral\"        \n                    break\n                default:\n                // default is blank\n            }\n\n            // Rating detirmines color of the cell based comparrison to average \n            const RatingLogic = props.type === \"bench_points\" || props.type === \"transfer_points\" ? \n                // Logic reversed for bench points\n                RatingTypeLogic\n                :\n                // Returns green or red cell depending matchweek point type's comparrison to average\n                TableCellType (ValueLogic, GameweekAverage)\n            \n            // Returns cell and color of cell based on weekly performance and type\n            return (\n                <TablePlayersCell\n                    key={index}\n                    type={props.type}\n                    rating={RatingLogic}\n                    value={ValueLogic}\n                />\n            )\n        })\n        \n        // Total Logic detirmines total of value across the season\n        // Intitally set as empty\n        var TotalsLogic, TotalsRatingLogic\n\n        // Switch will only active for bench points and weekly points\n        switch(props.type) {\n            case \"bench_points\":\n                // Gets players total number of bench points\n                TotalsLogic = SiteReducer(\n                        player.matches.map((matchweek) => matchweek.bench_points)\n                    )\n                // If value is higher that average will return bad\n                // the less points score by bench players the better\n                TotalsRatingLogic = TotalsLogic > TotalsAverage ? \n                    \"bad\" : \"good\"\n                break;\n            case \"weekly_points\":\n                // Gets players total number of points\n                TotalsLogic = player.points_total\n                break\n            case \"transfer_points\":\n                TotalsLogic = SiteReducer(\n                    player.matches.map((matchweek) => matchweek.game_week_transfers_cost)\n                )\n                TotalsRatingLogic = TotalsLogic > TotalsAverage ? \n                    \"bad\" : \"good\"\n                break\n            default:\n                // default is blank\n        }\n\n        // If total of current player is over the average, returns \"good\" or else it returns bad\n        const TotalRatingLogic = props.type === \"bench_points\" || props.type === \"transfer_points\" ?\n            // Logic reversed for bench points\n            TotalsRatingLogic\n            :\n            // Returns green or red cell total in comparrison to average\n            TableCellType(TotalsLogic, TotalsAverage)\n        \n        return (\n            <TablePlayersRow\n                key={index}\n                type={props.type}\n                rank={FplData.indexOf(player) + 1}\n                player_name={player.player_name}\n                game_weeks={PlayersWeek}\n                total_rating={TotalRatingLogic}\n                total_points={TotalsLogic}\n            />\n        )\n    })\n\n    return (\n        <div className=\"table-container\">\n            <DisplayTable\n                title={props.title}\n                data={FplData}\n                type={props.type}\n                rows={PlayerGameWeeks}\n                averages={AllOfTheAverages}\n                total_averages={TotalsAverage}\n            />\n        </div>\n    )\n\n}\n\nexport default PointsTable","import { useEffect, useState } from 'react'\n\nconst SiteFetcher = (url, properties) => {\n    \n    const [response, setResponse] = useState(properties);\n    const [isFetching, setIsFetching] = useState(true)\n    const [isDisplayable, setIsDisplayable] = useState(false)\n  \n    useEffect(() => {\n      fetch(url)\n        .then(response => response.json())\n        .then((responseJson) => {\n            setIsDisplayable(true)\n            setIsFetching(false)\n            setResponse(responseJson);\n        })\n        .catch((error) => {\n            setIsFetching(false)\n            console.log(error)\n        })\n    }, [url])\n  \n    return {\n      response,\n      isFetching,\n      isDisplayable\n    }\n};\n\nexport default SiteFetcher","import React from 'react'\n// Components\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport ReportProblemIcon from '@material-ui/icons/ReportProblem';\n\nconst SiteRender = (props) => {\n\n    const renderLogic = (props.data.IsFetching)?(\n        <ReportProblemIcon />\n      ):(\n          (props.data.isDisplayable) ? (\n            props.component\n          ):(\n              <div>\n                  <h1>Loading Please Wait...</h1>\n                  <CircularProgress />\n              </div>\n          )\n        )\n\n    return renderLogic\n}\n\nexport default SiteRender\n","import React from 'react'\nimport { Tabs } from 'antd';\n\nconst { TabPane } = Tabs;\n\nconst AntdTabs = (props) => {\n\n    const displayTabs = props.data.map((tab, index) => (\n        <TabPane tab={tab.title} key={index}>\n            {tab.content}\n        </TabPane>\n    ))\n\n    return (\n        <Tabs type=\"card\" \n            size=\"large\" \n            centered={true}\n        >\n            {displayTabs}\n        </Tabs>\n    )\n}\nexport default AntdTabs","const SiteLabelRender = (title) => title.split(\"_\").join(\" \").toUpperCase()\n\nexport default SiteLabelRender","import React from 'react'\n// COMPONENTS\nimport SiteLabelRender from 'Tables/TableTools/SiteLabelRender'\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableHead from '@material-ui/core/TableHead';\n\nconst TableHeadings = (props) => {\n\n    // Grabs the key values from a single object \n    const table_headings = Object.keys(props.data[0]).filter(heading => heading !== \"content\").slice(0,3)\n    \n    // Renders the keys for each object \n    const renderHeadings = table_headings.map((heading, index) => {\n\n        const headingLogic = SiteLabelRender(heading)\n        \n        return(\n            <TableCell align=\"center\" key={index}>\n                <b className=\"material-table-heading\">\n                    {headingLogic}\n                </b>\n            </TableCell>\n        )\n    })\n    \n    return (\n        <TableHead>\n            <TableRow>\n                <TableCell align=\"justify\"/>\n                {renderHeadings}\n            </TableRow>\n        </TableHead>\n    )\n}\n\n\nexport default TableHeadings","import React from 'react'\n// Components\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\nimport Collapse from '@material-ui/core/Collapse';\n\n// Takes \"content\" as a child property\n// \n// Example: \n//  <CollapseSectionDropdown> \n//      \"This Content\"\n//  </CollapseSectionDropdown>\n\nconst CollapseSectionDropdown = (props) => ( \n    <TableRow>\n        <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\n            <Collapse in={props.open} timeout=\"auto\" unmountOnExit>\n                <div className=\"material-ui-content-container\">\n                    {props.content}\n                </div>\n            </Collapse>\n        </TableCell>\n    </TableRow>\n)\n\nexport default CollapseSectionDropdown\n","import React, { useState } from 'react'\n// Components\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableCollapsableRow from './TableCollapsableRow'\n// ICONS\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faChevronCircleDown, faChevronCircleRight } from '@fortawesome/free-solid-svg-icons'\n\n\nconst TableSingleRow = (props) => {\n    \n    const rowContent = Object.keys(props.row).filter(heading => heading !== \"content\").slice(0,3)\n\n    // By default rows are closed and content is hidden\n    const [open, setOpen] = useState(false)\n\n    // When clicked open Logic with toggle \n    const openLogic = () => setOpen(!open)\n\n    // Returns a table cell for each value in object until cropped\n    const displayedTableCells = rowContent.map((attribute, index) => (\n            <TableCell align=\"center\" key={index}>\n                {props.row[attribute]}\n            </TableCell>\n        )\n    )\n\n    const arrowLogic = !open ? faChevronCircleRight : faChevronCircleDown \n\n    const dropDownLogic = () => {\n        if (props.content) {\n            return (\n                <FontAwesomeIcon \n                    icon={arrowLogic}\n                    size=\"lg\" \n                    onClick={openLogic}\n                    className=\"cursor-pointer\"\n                />\n            )\n        }\n    }\n\n    return (\n        <>\n            <TableRow>\n                <TableCell>\n                    {dropDownLogic()}\n                </TableCell>\n                {displayedTableCells}\n            </TableRow>\n            <TableCollapsableRow\n                open={open}\n                content={props.content}\n            />\n        </>\n    )\n\n}\n\nexport default TableSingleRow","import React, {Fragment} from 'react';\n// Components\nimport TableBody from '@material-ui/core/TableBody';\nimport TableSingleRow from './TableSingleRow'\n\n\nconst TableContentRow = (props) => {\n\n    // Takes Data and renders a single row for each\n    const renderDataList = props.data.map((row, index) => {\n\n        return (\n            <TableSingleRow \n                key={index}\n                index={index} \n                row={row}\n                content={row.content}\n            />\n        )\n    })\n\n    return (\n        <TableBody>\n            <Fragment>    \n                {renderDataList}\n            </Fragment>\n        </TableBody>  \n    )\n}\n\n\nexport default TableContentRow","import React from 'react'\n// CSS\nimport './MaterialUITable.css'\n// Material UI Table\nimport TableContainer from '@material-ui/core/TableContainer';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\n// My Components\nimport TableHeadings from './TableContents/TableHeadings';\nimport TableContents from './TableContents/TableContents';\n\nconst MaterialUITable = (props) => (\n\n    <div className=\"material-table\">\n        <TableContainer component={Paper}>\n            <Table aria-label=\"collapsible table\">\n                {/* TABLE HEADINGS */}\n                <TableHeadings \n                    data={props.data} \n                />\n                {/* TABLE Contents */}\n                <TableContents \n                    data={props.data} \n                />\n            </Table>\n        </TableContainer>\n    </div>\n\n)\n\nexport default MaterialUITable","import React from 'react'\n// CSS\n\n// COMPONENTS\nimport { Card } from 'antd';\n\nconst AntdCard = (props) => {\n\n    const { Meta } = Card;\n\n    const spanLogic = props.span ? props.span : 3\n    const widthLogic = props.width ? props.width: 90\n\n    return (\n        <Card className={`site-span-${spanLogic} w-${widthLogic} player-summary-card`}>\n            <Meta title={`${props.title}:`}\n                description={props.description}\n            />\n        </Card>\n    )\n}\n\nexport default AntdCard","// import react from 'react'\nimport SiteLabelRender from 'Tables/TableTools/SiteLabelRender';\nimport MaterialUiTable from 'Components/MaterialUiTable'\nimport AntdCard from 'Components/AntdCard';\n\nconst DetailTables = (props) => {\n\n    const tableData = props.data.matches.map((match) => {\n\n        const matchCards = Object.keys(match).filter(match => match !== \"content\")\n\n        const displayedContent = matchCards.map((card) => {\n\n            const descriptionLogic = () => {\n                if (match[card] === 0) {\n                    return \"0\"\n                }\n                else if (card === \"team_value\") {\n                    return `£${match[card]/ 10}M`\n                }\n                return match[card]\n            }\n\n            return (\n                <AntdCard \n                    className=\"text-center\"\n                    title={`${ SiteLabelRender(card)}`}\n                    description={descriptionLogic()}\n                />\n            )\n        })\n\n        match.content = (\n            <div className=\"site-grid-system detail-table\">\n                {displayedContent}\n            </div>\n        )\n\n        return match\n    })\n    \n    return <MaterialUiTable data={tableData} />\n\n}\n\nexport default DetailTables","import React from 'react'\nimport SiteLabelRender from 'Tables/TableTools/SiteLabelRender';\n// CSS\nimport 'PlayerDetail/PlayerDetail.css'\nimport AntdCard from 'Components/AntdCard';\n\nconst SumamryTable = (props) => {\n\n    const summaryHeadings = {\n        player_id:  props.data.player_id,\n        total_points: props.data.points_total,\n        team_value: props.data.team_value / 10,\n        total_transfers: props.data.transfers_total,\n    }\n\n    const labelsList = Object.keys(summaryHeadings)\n\n    const displayDecription = labelsList.map((label) => {\n\n        var labelName, labelDescription\n\n        switch(label) {\n            case \"total_transfers\":\n                labelName = \"TRANSFERS\"\n                labelDescription = (\n                    <div className=\"labels-description-box\">\n                        <h5>{props.data.transfers_total}</h5>\n                        <p><b>Points Spent On Transfers: </b>{props.data.points_on_transfers}</p>\n                    </div>\n                )\n                break\n            case \"total_points\":\n                labelName = \"TOTAL POINTS\"\n                labelDescription = (\n                    <>\n                        <h5>{summaryHeadings[label]}</h5>\n                        <p><b>Last GW ({props.data.current_gameweek})</b>: {props.data.last_gameweek_points} points</p>\n                    </>\n                )\n                break\n            case \"team_value\":\n                labelName = \"TEAM VALUE\"\n                labelDescription = <h4>£{summaryHeadings[label]}M</h4>\n                break\n            default:\n                labelName = SiteLabelRender(label)\n                labelDescription = <h4>{summaryHeadings[label]}</h4>\n        }\n \n        return (\n            <AntdCard title={`${labelName}:`}\n                description={labelDescription}\n            />\n        )\n    })\n\n    return (\n        <div className=\"w-90 m-auto site-grid-system detail-table\">\n            {displayDecription}\n        </div>\n    )\n}\n\nexport default SumamryTable","import React from 'react'\n// COMPONENTS\nimport SiteLabelRender from 'Tables/TableTools/SiteLabelRender';\nimport AntdCard from 'Components/AntdCard';\n\n\nconst ChipTables = (props) => {\n\n    const displayChips = props.data.map((chip) => {\n\n        const descriptionLogic = (\n            <div>\n                <h6>Matchday: {chip.chip_matchday}</h6>\n                <p>Date Used: {chip.chip_date}</p>\n            </div>\n        )\n\n        return (\n            <AntdCard \n                width={80}\n                span={\"4\"}\n                className=\"text-center\"\n                title={`${ SiteLabelRender(chip.chip_name)}`}\n                description={descriptionLogic}\n            />\n        )\n    })\n\n    const filteredCards =  props.data.length === 5 ? \"None\" : 5 - props.data.length\n\n    const summary_card = (\n        <div>\n            <h3>{filteredCards}</h3>\n        </div>\n    )\n\n    return (\n        <div className=\"site-grid-system detail-table\">\n            <AntdCard \n                width={80}\n                span={4}\n                title=\"Chips Remaining\"\n                description={summary_card}\n            />\n            {displayChips}\n        </div>\n    )\n}\n\nexport default ChipTables","import React from 'react'\n// COMPONENTS\nimport AntdTabs from 'Components/AntdTabs'\nimport DetailTables from './DetailTables/DetailTables'\nimport SumamryTable from './DetailTables/SummaryTable'\nimport ChipsTable from './DetailTables/ChipTables'\n\n\nconst PlayerDetail = (props) => {\n\n    const pageContent = [\n        {\n            title: \"Summary\",\n            content: <SumamryTable title=\"Summary\" data={props.data}/>\n        },\n        {\n            title: \"Detailed\",\n            content: <DetailTables title=\"Detailed Table\" data={props.data} />\n        },\n        {\n            title: \"Chips\",\n            content: <ChipsTable data={props.data.chips} />\n        }  \n    ]\n\n    return (\n        <>\n            <h2>{props.data.player_name}</h2>\n            <h4>{props.data.team_name}</h4>\n            <AntdTabs data={pageContent} />\n        </>\n    )\n}\n\nexport default PlayerDetail ","const PlayerListData = [\n    {\n        \"player_id\": 0,\n        \"player_name\": \"\",\n        \"team_name\": \"\",\n        \"current_gameweek\": 0,\n        \"last_gameweek_points\": 0,\n        \"points_total\": 0,\n        \"transfers_total\": 0,\n        \"points_on_transfers\": 0,\n        \"team_value\": 0,\n        \"chips\": [\n            {\n                \"chip_owner\": \"\",\n                \"chip_name\": \"\",\n                \"chip_date\": \"\",\n                \"chip_matchday\": 1\n            }\n        ],\n        \"matches\": [\n            {\n                \"gameweek\": 1,\n                \"game_week_points\": 0,\n                \"points_total\": 0,\n                \"team_value\": 0,\n                \"game_week_transfers\": 0,\n                \"game_week_transfers_cost\": 0,\n                \"bench_points\": 0\n            } \n        ]\n    }\n]\n    \nexport default PlayerListData","const SummaryColumns = [\n    {\n        dataIndex: 'rank',\n        // fixed: \"left\",\n        width: 100,\n        sorter: {\n            compare: (a, b) => a.rank - b.rank,\n        }\n    },\n    {\n        title: \"PLAYER\",\n        dataIndex: 'player_name',\n        fixed: \"left\",\n        width: 100,\n    },\n    {\n        dataIndex: \"points_total\",\n        sorter: {\n            compare: (a, b) => a.points_total - b.points_total,\n        }\n    },\n    {\n        title: \"LAST GW\",\n        dataIndex: \"last_gameweek_points\"\n    },\n    {\n        dataIndex: \"transfers_total\",\n        sorter: {\n            compare: (a, b) => a.transfers_total - b.transfers_total,\n        }\n    },\n    {\n        title: \"TRANSFER POINTS\",\n        dataIndex: \"points_on_transfers\",\n        sorter: {\n            compare: (a, b) => a.points_on_transfers - b.points_on_transfers,\n        }\n    },\n    {\n        dataIndex: \"value\"\n    }\n]\n\nexport default SummaryColumns","import React from 'react'\n// COMPONENTS\nimport { Table } from 'antd'\n// DATA \nimport SummaryColumns from 'Data/SummaryColumns'\n\nconst SummaryTable = (props) => {\n\n    const myData = props.data.map((player, index) => {\n        player.rank = index + 1\n        player.chips_used = player.chips.length\n        player.value = `£${player.team_value/10}M`\n        return player\n    })\n\n    const columns = SummaryColumns.map((column) => {\n        if (!('title' in column)) {\n            return column.title = column.dataIndex.split(\"_\").join(\" \").toUpperCase()\n        }\n        column.align = \"center\"\n\n        return column\n    })\n\n    const paginationLogic = props.data.length <= 10 ? false : true\n    \n    return (\n        <>\n            <h1>Table</h1>\n            <div className=\"w-80 m-auto site-overflow\">\n                <Table columns={columns} dataSource={myData}  pagination={paginationLogic}/>\n            </div>\n        </>\n    )\n}\n\nexport default SummaryTable","import React from 'react'\n// CSS\nimport './App.css';\nimport './table.css'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport 'antd/dist/antd.css';\n// Components\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport SiteNavbar from './Components/SiteNavbar'\nimport PointsTable from './Tables/PointsTable';\n// Data\n// import PageData from 'Data/PageData';\n// import PageData, {playerListData, SiteFetch} from 'Data/PageData'\nimport SiteFetcher from 'Components/SiteFetcher'\nimport SiteRender from 'Components/SiteRender'\nimport PlayerDetail from './PlayerDetail';\nimport PlayerDataExample from 'Data/PlayerListData'\nimport SummaryTable from './Tables/SummaryTable';\n\n\nconst FplLink = \"https://kachiis-rest.herokuapp.com/api/fpl_players_refresh\"\n\nconst App = () => {\n\n  const SiteFetch = SiteFetcher(FplLink, PlayerDataExample)\n  const responseData = SiteFetch.response\n\n  const PageData = [\n    {\n      title: \"Weekly Points\",\n      content: <PointsTable data={responseData} title=\"Weekly Points\" type=\"weekly_points\" />\n\n    },\n    {\n        title: \"Weekly Totals\",\n        content: <PointsTable type=\"points_total\" title=\"Weekly Totals\" data={responseData} />\n    },\n    {\n        title: \"Team value\",\n        content: <PointsTable type=\"team_value\" title=\"Team Value\" data={responseData} />\n    },\n    {\n        title: \"Bench points\",\n        content: <PointsTable type=\"bench_points\" title=\"Bench Points\" data={responseData} />\n    },\n    {\n        title: \"Points on transfers\",\n        content: <PointsTable type=\"transfer_points\" title=\"Transfer Points\" data={responseData} />\n    }\n  ]\n   \n  const displayPages = PageData.map((page, index) => {\n\n    const pageLink = page.title.split(\" \").join(\"-\")\n\n    return (\n      <Route path={`/fpl_app/${pageLink}`} key={index}>\n        <SiteRender\n          component={page.content}\n          data={SiteFetch}\n        />\n      </Route>\n    )\n  })\n\n  const displayPlayerPages = responseData.map((player, index) => (\n      <Route path={`/fpl_app/player/${player.player_name}`} key={index}>\n        <SiteRender\n          component={<PlayerDetail data={player}/>}\n          data={SiteFetch}\n        />\n      </Route>\n  ))\n\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <SiteNavbar data={responseData}/>\n        <main>\n          <Switch>\n            {displayPages}\n            {displayPlayerPages}\n            <Route path=\"/\">\n              <SiteRender\n                component={<SummaryTable data={responseData}/>}\n                data={SiteFetch}\n              />\n            </Route>\n          </Switch>\n        </main>\n      </BrowserRouter>\n    </div>\n  )\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}